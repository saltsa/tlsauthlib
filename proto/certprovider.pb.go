// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: protos/certprovider.proto

package proto

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetRootCertsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRootCertsRequest) Reset() {
	*x = GetRootCertsRequest{}
	mi := &file_protos_certprovider_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRootCertsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRootCertsRequest) ProtoMessage() {}

func (x *GetRootCertsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_certprovider_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRootCertsRequest.ProtoReflect.Descriptor instead.
func (*GetRootCertsRequest) Descriptor() ([]byte, []int) {
	return file_protos_certprovider_proto_rawDescGZIP(), []int{0}
}

type GetCRL struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCRL) Reset() {
	*x = GetCRL{}
	mi := &file_protos_certprovider_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCRL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCRL) ProtoMessage() {}

func (x *GetCRL) ProtoReflect() protoreflect.Message {
	mi := &file_protos_certprovider_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCRL.ProtoReflect.Descriptor instead.
func (*GetCRL) Descriptor() ([]byte, []int) {
	return file_protos_certprovider_proto_rawDescGZIP(), []int{1}
}

func (x *GetCRL) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type X509BundlesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Crl           [][]byte               `protobuf:"bytes,1,rep,name=crl,proto3" json:"crl,omitempty"`
	Bundles       map[string][]byte      `protobuf:"bytes,2,rep,name=bundles,proto3" json:"bundles,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	StatusMessage string                 `protobuf:"bytes,3,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *X509BundlesResponse) Reset() {
	*x = X509BundlesResponse{}
	mi := &file_protos_certprovider_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *X509BundlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*X509BundlesResponse) ProtoMessage() {}

func (x *X509BundlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_certprovider_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use X509BundlesResponse.ProtoReflect.Descriptor instead.
func (*X509BundlesResponse) Descriptor() ([]byte, []int) {
	return file_protos_certprovider_proto_rawDescGZIP(), []int{2}
}

func (x *X509BundlesResponse) GetCrl() [][]byte {
	if x != nil {
		return x.Crl
	}
	return nil
}

func (x *X509BundlesResponse) GetBundles() map[string][]byte {
	if x != nil {
		return x.Bundles
	}
	return nil
}

func (x *X509BundlesResponse) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

type SignCertificate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Csr           []byte                 `protobuf:"bytes,1,opt,name=csr,proto3" json:"csr,omitempty"`
	Hostname      string                 `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"` // useful for debugging
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`         // certificate type, not used
	Identity      string                 `protobuf:"bytes,4,opt,name=identity,proto3" json:"identity,omitempty"` // identity the granted certificate should contain
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignCertificate) Reset() {
	*x = SignCertificate{}
	mi := &file_protos_certprovider_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignCertificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignCertificate) ProtoMessage() {}

func (x *SignCertificate) ProtoReflect() protoreflect.Message {
	mi := &file_protos_certprovider_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignCertificate.ProtoReflect.Descriptor instead.
func (*SignCertificate) Descriptor() ([]byte, []int) {
	return file_protos_certprovider_proto_rawDescGZIP(), []int{3}
}

func (x *SignCertificate) GetCsr() []byte {
	if x != nil {
		return x.Csr
	}
	return nil
}

func (x *SignCertificate) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *SignCertificate) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SignCertificate) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

type CertificateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Certificate   [][]byte               `protobuf:"bytes,1,rep,name=certificate,proto3" json:"certificate,omitempty"`
	Crl           [][]byte               `protobuf:"bytes,2,rep,name=crl,proto3" json:"crl,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CertificateResponse) Reset() {
	*x = CertificateResponse{}
	mi := &file_protos_certprovider_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CertificateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateResponse) ProtoMessage() {}

func (x *CertificateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_certprovider_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertificateResponse.ProtoReflect.Descriptor instead.
func (*CertificateResponse) Descriptor() ([]byte, []int) {
	return file_protos_certprovider_proto_rawDescGZIP(), []int{4}
}

func (x *CertificateResponse) GetCertificate() [][]byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

func (x *CertificateResponse) GetCrl() [][]byte {
	if x != nil {
		return x.Crl
	}
	return nil
}

var File_protos_certprovider_proto protoreflect.FileDescriptor

const file_protos_certprovider_proto_rawDesc = "" +
	"\n" +
	"\x19protos/certprovider.proto\"\x15\n" +
	"\x13GetRootCertsRequest\"\x1c\n" +
	"\x06GetCRL\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\"\xc7\x01\n" +
	"\x13X509BundlesResponse\x12\x10\n" +
	"\x03crl\x18\x01 \x03(\fR\x03crl\x12;\n" +
	"\abundles\x18\x02 \x03(\v2!.X509BundlesResponse.BundlesEntryR\abundles\x12%\n" +
	"\x0estatus_message\x18\x03 \x01(\tR\rstatusMessage\x1a:\n" +
	"\fBundlesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\"o\n" +
	"\x0fSignCertificate\x12\x10\n" +
	"\x03csr\x18\x01 \x01(\fR\x03csr\x12\x1a\n" +
	"\bhostname\x18\x02 \x01(\tR\bhostname\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x1a\n" +
	"\bidentity\x18\x04 \x01(\tR\bidentity\"I\n" +
	"\x13CertificateResponse\x12 \n" +
	"\vcertificate\x18\x01 \x03(\fR\vcertificate\x12\x10\n" +
	"\x03crl\x18\x02 \x03(\fR\x03crl2\x8c\x01\n" +
	"\fCertProvider\x12>\n" +
	"\x0eFetchRootCerts\x12\x14.GetRootCertsRequest\x1a\x14.X509BundlesResponse0\x01\x12<\n" +
	"\x10FetchCertificate\x12\x10.SignCertificate\x1a\x14.CertificateResponse0\x01B\x10Z\x0e./certproviderb\x06proto3"

var (
	file_protos_certprovider_proto_rawDescOnce sync.Once
	file_protos_certprovider_proto_rawDescData []byte
)

func file_protos_certprovider_proto_rawDescGZIP() []byte {
	file_protos_certprovider_proto_rawDescOnce.Do(func() {
		file_protos_certprovider_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protos_certprovider_proto_rawDesc), len(file_protos_certprovider_proto_rawDesc)))
	})
	return file_protos_certprovider_proto_rawDescData
}

var file_protos_certprovider_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_protos_certprovider_proto_goTypes = []any{
	(*GetRootCertsRequest)(nil), // 0: GetRootCertsRequest
	(*GetCRL)(nil),              // 1: GetCRL
	(*X509BundlesResponse)(nil), // 2: X509BundlesResponse
	(*SignCertificate)(nil),     // 3: SignCertificate
	(*CertificateResponse)(nil), // 4: CertificateResponse
	nil,                         // 5: X509BundlesResponse.BundlesEntry
}
var file_protos_certprovider_proto_depIdxs = []int32{
	5, // 0: X509BundlesResponse.bundles:type_name -> X509BundlesResponse.BundlesEntry
	0, // 1: CertProvider.FetchRootCerts:input_type -> GetRootCertsRequest
	3, // 2: CertProvider.FetchCertificate:input_type -> SignCertificate
	2, // 3: CertProvider.FetchRootCerts:output_type -> X509BundlesResponse
	4, // 4: CertProvider.FetchCertificate:output_type -> CertificateResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_protos_certprovider_proto_init() }
func file_protos_certprovider_proto_init() {
	if File_protos_certprovider_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protos_certprovider_proto_rawDesc), len(file_protos_certprovider_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_certprovider_proto_goTypes,
		DependencyIndexes: file_protos_certprovider_proto_depIdxs,
		MessageInfos:      file_protos_certprovider_proto_msgTypes,
	}.Build()
	File_protos_certprovider_proto = out.File
	file_protos_certprovider_proto_goTypes = nil
	file_protos_certprovider_proto_depIdxs = nil
}
